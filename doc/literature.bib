%% Angaben f체r B체cher:
% - Author
% - Titel + Untertitel
% - (Auflage, Verlag)
% - Erscheinungsort und -jahr
% - (ISBN)

%% Angaben f체r Artikel im Sammelwerk:
% - Wie bei Buch, und zus채tzlich:
% - Titel des Sammelwerks (, in: ...)
% - Herausgeber des Sammelwerks
% - Seitenangabe innerhalb des Sammelwerks


@misc{Butting.2018,
  author={Arvid Butting, Manuela Dalibor, Gerrit Leonhardt, Bernhard Rumpe, and Andreas Wortmann},
  title={Deriving Fluent Internal Domain-Specific Languages from Grammars},
  year={2018}
}

@book{Parr.2010,
  author={Terence Parr},
  title={Language Implementation Patterns: create your own domain-specific and general programming languages},
  publisher={Pragmatic Bookshelf},
  year={2010},
  isbn={9781934356456}
}

@book{Fowler.2010,
  author={Martin Fowler},
  title={Domain-Specific Languages},
  publisher={Addison-Wesley},
  year={2010},
  city={Westford, Massachusetts},
  isbn={978-0-321-71294-3}
}

@book{Fowler.2002,
  author={Martin Fowler},
  title={Patterns of Enterprise Application Architecture},
  publisher={Addison-Wesley},
  year={2002},
  isbn={978-0-321-12742-0}
}

@inproceedings{freeman2006evolving,
  title={Evolving an embedded domain-specific language in Java},
  author={Freeman, Steve and Pryce, Nat},
  booktitle={OOPSLA Companion},
  pages={855--865},
  year={2006}
}

@book{Parr.2010,
  author={Terence Parr},
  title={The Definitive ANTLR 4 Reference},
  publisher={Pragmatic Bookshelf},
  year={2012},
  isbn={978-1-93435-699-9}
}

@misc{Admiraal.2010,
  author={A.J. Admiraal},
  title={Automated ANTLR Tree Walker Generation},
  year={2010}
}

@inproceedings{butting2018deriving,
  title={Deriving fluent internal domain-specific languages from grammars},
  author={Butting, Arvid and Dalibor, Manuela and Leonhardt, Gerrit and Rumpe, Bernhard and Wortmann, Andreas},
  booktitle={Proceedings of the 11th ACM SIGPLAN International Conference on Software Language Engineering},
  pages={187--199},
  year={2018},
  organization={ACM}
}

@article{oliveira2009domain,
  title={Domain specific languages: A theoretical survey},
  author={Oliveira, Nuno and Pereira, Maria Jo{\~a}o and Henriques, Pedro and Cruz, Daniela},
  journal={INForum'09-Simp{\'o}sio de Inform{\'a}tica},
  year={2009},
  publisher={Faculdade de Ci{\^e}ncias da Universidade de Lisboa}
}

@article{buzdin2012transformation,
  title={Transformation of UML class diagram to internal java domain-specific language},
  author={Buzdin, Dmitry and Nikiforova, Oksana},
  journal={Applied Computer Systems},
  volume={13},
  number={1},
  pages={61--67},
  year={2012},
  publisher={Versita}
}

@article{sandeepdomain,
  title={Domain Specific Language--A Solution to the Intricacies of General Purpose Language},
  author={Sandeep, R and Govind, S and Goutham, V Atreya and Rekha, PM}
}

@inproceedings{holldobler2017advances,
  title={Advances in modeling language engineering},
  author={H{\"o}lldobler, Katrin and Roth, Alexander and Rumpe, Bernhard and Wortmann, Andreas},
  booktitle={International Conference on Model and Data Engineering},
  pages={3--17},
  year={2017},
  organization={Springer}
}

@inproceedings{jezequel2014domain,
  title={Domain specific languages: from craft to engineering},
  author={Jezequel, Jean-Marc},
  year={2014}
}

@inproceedings{roth2019fling,
  title={Fling-A Fluent API Generator (Artifact)},
  author={Roth, Ori and Gil, Yossi},
  year={2019},
  organization={Schloss Dagstuhl-Leibniz-Zentrum fuer Informatik}
}

@article{Knuth1968,
author="Knuth, Donald E.",
title="Semantics of context-free languages",
journal="Mathematical systems theory",
year="1968",
month="Jun",
day="01",
volume="2",
number="2",
pages="127--145",
abstract="``Meaning'' may be assigned to a string in a context-free language by defining ``attributes'' of the symbols in a derivation tree for that string. The attributes can be defined by functions associated with each production in the grammar. This paper examines the implications of this process when some of the attributes are ``synthesized'', i.e., defined solely in terms of attributes of thedescendants of the corresponding nonterminal symbol, while other attributes are ``inherited'', i.e., defined in terms of attributes of theancestors of the nonterminal symbol. An algorithm is given which detects when such semantic rules could possibly lead to circular definition of some attributes. An example is given of a simple programming language defined with both inherited and synthesized attributes, and the method of definition is compared to other techniques for formal specification of semantics which have appeared in the literature.",
issn="1433-0490",
doi="10.1007/BF01692511",
url="https://doi.org/10.1007/BF01692511"
}

@incollection{clark2015conceptual,
  title={Conceptual model of the globalization for domain-specific languages},
  author={Clark, Tony and Van den Brand, Mark and Combemale, Benoit and Rumpe, Bernhard},
  booktitle={Globalizing Domain-Specific Languages},
  pages={7--20},
  year={2015},
  publisher={Springer}
}
